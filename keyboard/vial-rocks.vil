# Regenerate a Vial Rocks .vil for Corne v2 with layers 0–7 active and layer 8 = layer 0
import json

def macro_text(s): return [["text", s]]
def macro_text_enter(s): return [["text", s], ["tap", "KC_ENTER"]]

uid = 12888985424971681029  # stable uid; can be replaced if desired

# ==== Layer 0 — Base (QWERTY + Home-Row Mods, macOS-oriented) ====
# Left thumb: ESC | Space (hold→L2) | MO(2)  | Right thumb: MO(1) | Enter | Backspace
layer0 = [
    # Left half (top→bottom, 5 rows of 6)
    ["KC_ESCAPE","KC_1","KC_2","KC_3","KC_4","KC_5"],
    ["KC_TAB","KC_Q","KC_W","KC_E","KC_R","KC_T"],
    ["KC_LSFT","LGUI_T(KC_A)","LALT_T(KC_S)","LCTL_T(KC_D)","LSFT_T(KC_F)","KC_G"],
    ["KC_LCTL","KC_Z","KC_X","KC_C","KC_V","KC_B"],
    ["KC_ESC","KC_NO","KC_NO","LT(2,KC_SPACE)","MO(2)","KC_NO"],
    # Right half (top→bottom, 5 rows of 6)
    ["KC_MINUS","KC_0","KC_9","KC_8","KC_7","KC_6"],
    ["KC_GRAVE","KC_P","KC_O","KC_I","KC_U","KC_Y"],
    ["KC_QUOTE","RGUI_T(KC_SCOLON)","RALT_T(KC_L)","RCTL_T(KC_K)","RSFT_T(KC_J)","KC_H"],
    ["KC_NO","KC_SLASH","KC_DOT","KC_COMMA","KC_M","KC_N"],
    ["MO(1)","KC_NO","KC_NO","KC_BSPACE","KC_ENTER","KC_NO"],
]

# ==== Layer 1 — Navigation / Vim ====
layer1 = [
    ["KC_TRNS","KC_F1","KC_F2","KC_F3","KC_F4","KC_F5"],
    ["KC_TRNS","KC_GRAVE","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_LGUI","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_SPACE","KC_TRNS","KC_TRNS"],

    ["KC_F11","KC_F10","KC_F9","KC_F8","KC_F7","KC_F6"],
    ["KC_F12","KC_INSERT","KC_END","KC_PGUP","KC_PGDOWN","KC_HOME"],
    ["KC_NO","KC_PSCREEN","KC_RIGHT","KC_UP","KC_DOWN","KC_LEFT"],
    ["KC_NO","KC_PAUSE","LCTL(KC_RIGHT)","KC_ESCAPE","LCTL(KC_LEFT)","KC_CAPSLOCK"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
]

# ==== Layer 2 — Symbols + Numbers (JavaScript) ====
layer2 = [
    ["KC_TRNS","KC_EXLM","KC_AT","KC_HASH","KC_DLR","KC_PERC"],
    ["KC_TRNS","KC_LCBR","KC_LBRC","KC_LPRN","KC_RPRN","KC_RBRC"],
    ["KC_TRNS","KC_TILD","KC_GRV","KC_EQUAL","KC_MINUS","KC_PLUS"],
    ["KC_TRNS","KC_BSLASH","LSFT(KC_BSLASH)","KC_UNDS","KC_PIPE","KC_AMPR"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],

    ["KC_CIRC","KC_0","KC_9","KC_8","KC_7","KC_6"],
    ["KC_QUES","KC_DQUO","KC_QUOT","KC_RCBR","KC_RPRN","KC_RBRC"],
    ["KC_COLN","KC_SCLN","KC_ASTR","KC_SLSH","KC_DOT","KC_COMM"],
    ["KC_TRNS","KC_TRNS","KC_MINUS","KC_EQUAL","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
]

# ==== Layer 3 — Macros (Neovim/JS) ====
layer3 = [
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],

    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
]

# ==== Layer 4 — Mouse / Media ====
layer4 = [
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],

    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_VOLU","KC_MUTE","KC_VOLD","KC_NO"],
    ["KC_TRNS","KC_NO","KC_MNXT","KC_MPLY","KC_MPRV","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_BTN3","KC_BTN1","KC_BTN2","KC_NO"],
]

# ==== Layer 5 — Numpad ====
layer5 = [
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
    ["KC_TRNS","KC_KP_MINUS","KC_KP_ASTERISK","KC_KP_SLASH","KC_NUMLOCK","KC_NO"],
    ["KC_TRNS","KC_KP_PLUS","KC_KP_9","KC_KP_8","KC_KP_7","KC_NO"],
    ["KC_TRNS","KC_KP_PLUS","KC_KP_6","KC_KP_5","KC_KP_4","KC_NO"],
    ["KC_TRNS","KC_KP_0","KC_KP_3","KC_KP_2","KC_KP_1","KC_NO"],

    ["KC_KP_DOT","KC_KP_0","KC_SCLON","KC_TRNS","KC_TRNS","KC_TRNS"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
]

# ==== Layer 6 — System / RGB / Defaults ====
layer6 = [
    ["DF(0)","DF(1)","DF(2)","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","RGB_TOG"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],

    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
]

# ==== Layer 7 — Reserved ====
layer7 = [
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],

    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"],
    ["KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS","KC_TRNS"],
]

# ==== Layer 8 — Duplicate of Layer 0 ====
layer8 = layer0

layout = [layer0, layer1, layer2, layer3, layer4, layer5, layer6, layer7, layer8]

# Encoders placeholder (if present)
encoder_layout = [
    [["KC_VOLD","KC_VOLU"],["KC_PGDOWN","KC_PGUP"]]
] + [[["KC_TRNS","KC_TRNS"],["KC_TRNS","KC_TRNS"]]]*15

# Macros
macro = [
    [],  # 0 empty
    macro_text(":w\n"),                         # 1 save
    macro_text(":q\n"),                         # 2 quit
    macro_text(":Neotree toggle\n"),            # 3 file tree
    macro_text("ggVG=\n"),                      # 4 format whole buffer
    macro_text_enter("git add . && git commit -m \"wip\" --no-verify"),  # 5 quick commit
    macro_text("console.log()"), [["tap","KC_LEFT"]],  # 6 console.log() then left
    macro_text_enter("pnpm run test -- "),      # 7 test
]

v = {
  "version": 1,
  "uid": uid,
  "layout": layout,
  "encoder_layout": encoder_layout,
  "layout_options": -1,
  "macro": macro,
  "vial_protocol": 6,
  "via_protocol": 9,
  "tap_dance": [["KC_NO","KC_NO","KC_NO","KC_NO",300]]*32,
  "combo": [["KC_NO","KC_NO","KC_NO","KC_NO","KC_NO"]]*32,
  "key_override": [{
      "trigger": "KC_NO", "replacement": "KC_NO", "layers": 65535,
      "trigger_mods": 0, "negative_mod_mask": 0, "suppressed_mods": 0, "options": 7
  }]*32,
  "alt_repeat_key": [],
  "settings": {
    "1": 0,   # matrix debounce
    "2": 50,  # tap-hold term
    "3": 0,
    "4": 175, # tapping term (ms)
    "5": 5,
    "6": 5000,
    "7": 300, # combo term
    "8": 3,
    "9": 0,
    "10": 16,
    "11": 8,
    "12": 5,
    "13": 32,
    "14": 0,
    "15": 80,
    "16": 8,
    "17": 40,
    "18": 10,
    "19": 80,
    "20": 5,
    "21": 0
  }
}

out_path = "/mnt/data/corne-js-nvim-v2.vil"
with open(out_path, "w") as f:
    json.dump(v, f, indent=0, separators=(",",":"))

out_path

